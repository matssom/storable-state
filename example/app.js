(()=>{"use strict";class e{constructor(){this.events={}}subscribe(e,t){let s=this;return s.events.hasOwnProperty(e)||(s.events[e]=[]),s.events[e].push(t),()=>s.events[e].push(t)}unsubscribe(e,t){return this.events[e].splice(t,1).length>=1}publish(e,t={}){return this.events.hasOwnProperty(e)?this.events[e].map((e=>e(t))):[]}}class t{constructor(t,s){this.state=t,this.event=new e,this.start=s,this.set=this.set.bind(this),this.update=this.update.bind(this),this.subscribe=this.subscribe.bind(this)}set(e){this.state=e,this.event.publish("STATE_CHANGE",e)}update(e){this.set(e(this.state))}subscribe(e){return this.event.subscribe("STATE_CHANGE",e),1===this.event.events.STATE_CHANGE.length&&this.start&&(this.cleanup=this.start(this.set)),e(this.state),()=>{this.event.unsubscribe("STATE_CHANGE",e)&&0===this.event.events.STATE_CHANGE.length&&this.cleanup&&this.cleanup()}}}const s=((e=0)=>{const{subscribe:s}=(n=async e=>{await new Promise(((e,t)=>setTimeout(e,3e3))),console.log("got my first count subscriber");let t=100;e(t);const s=setInterval((()=>{t--,e(t)}),1e3);return()=>{console.log("lost my last count subscriber"),clearInterval(s)}},((e,s)=>({subscribe:new t(e,s).subscribe}))(e,n));var n;return{subscribe:s}})(null);let n;const r=e=>{n=s.subscribe((t=>{e.innerText=t}))};document.querySelector("#increment").addEventListener("click",(()=>s.increment())),document.querySelector("#decrement").addEventListener("click",(()=>s.decrement())),document.querySelector("#unsubscribe").addEventListener("click",(()=>n())),document.querySelector("#subscribe").addEventListener("click",(()=>r(document.querySelector("#counter")))),r(document.querySelector("#counter"))})();